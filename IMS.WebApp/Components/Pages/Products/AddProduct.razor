@page "/products/add"

@rendermode InteractiveServer

@inject IAddProductUseCase _AddProductUseCase;
@inject NavigationManager _NavigationManager;

<h3>Add Product</h3>
<br />

<EditForm Model="product" FormName="AddProductForm" OnValidSubmit="AddProductAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary class="text-danger"></ValidationSummary>

    <div class="form-group mb-3">
        <label for="name" class="form-label">Product Name</label>
        <InputText class="form-control" id="name" @bind-Value="@product.ProductName"></InputText>
        <ValidationMessage For="@(() => product.ProductName)" class="text-danger"></ValidationMessage>
    </div>

    <div class="mb-3 form-group">
        <label for="quantity" class="form-label">Quantity</label>
        <InputNumber class="form-control" id="quantity" @bind-Value="@product.Quantity"></InputNumber>
        <ValidationMessage For="@(() => product.Quantity)" class="text-danger"></ValidationMessage>
    </div>

    <div class="mb-3 form-group">
        <label for="price" class="form-label">Price</label>
        <InputNumber class="form-control" id="price" @bind-Value="@product.Price"></InputNumber>
        <ValidationMessage For="@(() => product.Price)" class="text-danger"></ValidationMessage>
    </div>

    <div class="mb-3 form-group">
        <label class="form-label">Inventories</label>
        <ProductInventoriesComponent Product="this.product"></ProductInventoriesComponent>
    <ValidationMessage For="@(() => product.ProductInventories)" class="text-danger"></ValidationMessage>
    </div>
    <br />


    <button type="submit" class="btn btn-primary"> Add Product</button>
    <NavLink class="btn btn-secondary mx-2" href="/products/list">Cancel</NavLink>
</EditForm>


@code {
    [SupplyParameterFromForm]
    private Product product { get; set; } = new Product();

    private async Task AddProductAsync()
    {
        await _AddProductUseCase.ExecuteAsync(product);
        _NavigationManager.NavigateTo("/products/list");
    }

}
