@inject NavigationManager _navigationManager
@inject IDeleteProductUseCase _deleteProductUseCase

@if (this.Product is not null)
{
    <tr>

        <td>@Product.ProductName</td>
        <td>@Product.Quantity</td>
        <td>@Product.Price.ToString("c")</td>
        <td>
            <a href="/products/edit/@Product.ProductId"
                     class="btn btn-outline-dark">
                Edit
            </a>
        </td>
        <td>
            <button 
                type="button"
                class="btn btn-outline-danger"
                @onclick="async ()=> { await HandleDelete(Product.ProductId);}"> Delete </button>
        </td>
    </tr>
}

@code {
    [Parameter] public Product? Product { get; set; }


    private async Task HandleDelete(int productId)
    {
        await _deleteProductUseCase.ExecuteAsync(productId);
        this.Product = null; // Clear the product after deletion

    }
}
